# Dockerfile for Product Catalog Service
# Use an official Python runtime as a parent image
FROM python:3.11-slim

# Set the working directory in the container
WORKDIR /app

# Copy the dependency files (only requirements.txt)
# This allows Docker to cache the layer if requirements haven't changed
COPY requirements.txt .

# Install any needed packages specified in requirements.txt
RUN pip install --no-cache-dir -r requirements.txt

# Copy the rest of the application code into the container
COPY . .

# Expose the port the app runs on (Flask defaults to 5000)
EXPOSE 5000

# Define environment variables
ENV FLASK_APP=product-catalog-service.py
ENV FLASK_RUN_HOST=0.0.0.0
ENV FLASK_RUN_PORT=5000

# Run the application using Gunicorn for production readiness
# Gunicorn is a robust HTTP server for Python web applications.
# We run 4 worker processes to handle concurrent requests efficiently.
CMD ["gunicorn", "-w", "4", "-b", "0.0.0.0:5000", "product-catalog-service:app"]