name: KubeCart CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  # --- Project Specific Variables (ACR_NAME is removed from here) ---
  CLUSTER_NAME: ${{ secrets.CLUSTER_NAME }}
  RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP_NAME }}
  
  # --- Image & Deployment Specific Variables ---
  IMAGE_NAME: product-catalog-service 
  SERVICE_PATH: services/product-catalog
  K8S_CONTAINER_NAME: product-catalog-service-container
  DEPLOYMENT_NAME: product-catalog-service-deployment

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      # Use the secret directly to construct the output image name
      image_name: ${{ secrets.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.run_id }}

    steps:
      - name: ‚¨áÔ∏è Checkout Repository
        uses: actions/checkout@v4

      - name: üîê Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: üîê Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          # <-- CHANGE: Use the secret directly here
          login-server: ${{ secrets.ACR_NAME }}.azurecr.io

      - name: üî® Build and Push Docker Image to ACR
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.SERVICE_PATH }}
          file: ${{ env.SERVICE_PATH }}/Dockerfile
          push: true
          tags: |
            ${{ secrets.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest
            ${{ secrets.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.run_id }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: üîê Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: ‚öôÔ∏è Set up Kubeconfig for AKS
        run: az aks get-credentials --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.CLUSTER_NAME }} --overwrite-existing

      - name: üöÄ Update Kubernetes Deployment
        run: |
          kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} ${{ env.K8S_CONTAINER_NAME }}=${{ needs.build-and-push.outputs.image_name }}
          echo "Deployment update initiated."

