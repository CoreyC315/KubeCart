name: KubeCart CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_NAME: product-catalog-service 
  SERVICE_PATH: services/product-catalog # FIX: Changed to forward slash (/)
  TAG: ${{ github.run_id }} 
  DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
  K8S_MANIFEST: kubernetes/manifests/KubeCart.yaml
  K8S_CONTAINER_NAME: product-catalog-service-container # NEW: Container name for kubectl

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    outputs:
      new_image: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
      
    steps:
      - name: ‚¨áÔ∏è Checkout Repository
        uses: actions/checkout@v4

      - name: üîë Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: üî® Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.SERVICE_PATH }}
          file: ${{ env.SERVICE_PATH }}/Dockerfile 
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}

  # ----------------------------------------------------
  # --- Kubernetes Deployment Job (Using kubectl set image) ---
  # ----------------------------------------------------
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    env:
      NEW_IMAGE_TAG: ${{ needs.build-and-push.outputs.new_image }}
      
    steps:
      - name: ‚¨áÔ∏è Checkout Repository (Needed for access to KubeCart.yaml)
        uses: actions/checkout@v4
        
      # Placeholder for KUBECTL CONFIGURATION
      # (You would configure Minikube/K8s access here)

      - name: üöÄ Update Deployment Image Tag
        run: |
          echo "Deployment: ${{ env.IMAGE_NAME }}-deployment"
          echo "Container: ${{ env.K8S_CONTAINER_NAME }}"
          echo "New Image: ${{ env.NEW_IMAGE_TAG }}"
          
          # In a real environment, this command updates the deployment:
          # kubectl set image deployment/${{ env.IMAGE_NAME }}-deployment ${{ env.K8S_CONTAINER_NAME }}=${{ env.NEW_IMAGE_TAG }}
          
          echo "Deployment update simulated successfully."